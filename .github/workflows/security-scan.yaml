name: Security Scan

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly at midnight on Sunday
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: 
      - main
      - develop
    paths:
      - src/**
      - infrastructure/**
      - Dockerfile
      - docker-compose.yml
      - package.json
      - yarn.lock

permissions:
  security-events: write
  contents: read

jobs:
  codeql_analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
          queries: security-extended,security-and-quality
          config-file: ./.github/codeql/codeql-config.yml

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript"
          upload: true
          output: sarif-results

      - name: Upload SAST Results
        uses: actions/upload-artifact@v3
        with:
          name: codeql-results
          path: sarif-results
          retention-days: 30

  container_scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.11.2
        with:
          scan-type: 'fs,config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          timeout: '10m'
          exit-code: '1'
          ignore-unfixed: true

      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results
          path: trivy-results.sarif
          retention-days: 30

  compliance_check:
    name: Security Compliance Check
    runs-on: ubuntu-latest
    needs: [codeql_analysis, container_scan]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download previous scan results
        uses: actions/download-artifact@v3
        with:
          path: security-results

      - name: GDPR Compliance Check
        run: |
          echo "Validating GDPR requirements..."
          # Check data encryption implementation
          grep -r "AES-256" ./src
          # Verify data retention policies
          grep -r "retention" ./src
          # Check consent management
          grep -r "consent" ./src

      - name: CCPA Compliance Check
        run: |
          echo "Validating CCPA requirements..."
          # Check data deletion capabilities
          grep -r "deleteUser" ./src
          # Verify opt-out mechanisms
          grep -r "optOut" ./src
          # Check data access controls
          grep -r "accessControl" ./src

      - name: SOC 2 Security Controls Check
        run: |
          echo "Validating SOC 2 controls..."
          # Check access logging
          grep -r "auditLog" ./src
          # Verify encryption standards
          grep -r "encrypt" ./src
          # Check authentication mechanisms
          grep -r "authenticate" ./src

      - name: Generate Compliance Report
        run: |
          {
            echo "# Security Compliance Report"
            echo "## Generated: $(date)"
            echo "### GDPR Status"
            cat gdpr-results.txt
            echo "### CCPA Status"
            cat ccpa-results.txt
            echo "### SOC 2 Status"
            cat soc2-results.txt
          } > compliance-report.md

      - name: Upload Compliance Report
        uses: actions/upload-artifact@v3
        with:
          name: compliance-report
          path: compliance-report.md
          retention-days: 30

      - name: Security Report Summary
        if: always()
        run: |
          echo "::group::Security Scan Summary"
          echo "CodeQL Analysis: Complete"
          echo "Container Security: Complete"
          echo "Compliance Checks: Complete"
          echo "::endgroup::"