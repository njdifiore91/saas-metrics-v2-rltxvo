apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: startup-metrics
  labels:
    app: startup-metrics
    component: api-gateway
    environment: production
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: startup-metrics
      component: api-gateway
  template:
    metadata:
      labels:
        app: startup-metrics
        component: api-gateway
    spec:
      serviceAccountName: api-gateway
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
      containers:
      - name: api-gateway
        image: startup-metrics/api-gateway:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 3
          failureThreshold: 2
        envFrom:
        - configMapRef:
            name: startup-metrics-config
        - secretRef:
            name: startup-metrics-secrets
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: config-volume
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: config-volume
        configMap:
          name: startup-metrics-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - api-gateway
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60